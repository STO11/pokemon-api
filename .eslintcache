[{"E:\\projetos\\react\\pokemon-site\\src\\components\\screentop.js":"1","E:\\projetos\\react\\pokemon-site\\src\\util\\useScript.js":"2","E:\\projetos\\react\\pokemon-site\\src\\components\\screendown.js":"3","E:\\projetos\\react\\pokemon-site\\src\\home\\index.js":"4","E:\\projetos\\react\\pokemon-site\\src\\provider\\api.js":"5","E:\\projetos\\react\\pokemon-site\\src\\index.js":"6"},{"size":3333,"mtime":1607732572726,"results":"7","hashOfConfig":"8"},{"size":344,"mtime":1607716254326,"results":"9","hashOfConfig":"8"},{"size":2907,"mtime":1607726212691,"results":"10","hashOfConfig":"8"},{"size":518,"mtime":1607717494683,"results":"11","hashOfConfig":"8"},{"size":351,"mtime":1607718656564,"results":"12","hashOfConfig":"8"},{"size":608,"mtime":1607705413622,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14bp7py",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\projetos\\react\\pokemon-site\\src\\components\\screentop.js",["26","27","28","29","30","31"],"E:\\projetos\\react\\pokemon-site\\src\\util\\useScript.js",[],"E:\\projetos\\react\\pokemon-site\\src\\components\\screendown.js",["32","33","34"],"E:\\projetos\\react\\pokemon-site\\src\\home\\index.js",["35","36","37","38"],"E:\\projetos\\react\\pokemon-site\\src\\provider\\api.js",[],"E:\\projetos\\react\\pokemon-site\\src\\index.js",[],{"ruleId":"39","severity":1,"message":"40","line":2,"column":9,"nodeType":"41","messageId":"42","endLine":2,"endColumn":21},{"ruleId":"39","severity":1,"message":"43","line":15,"column":12,"nodeType":"41","messageId":"42","endLine":15,"endColumn":23},{"ruleId":"39","severity":1,"message":"44","line":15,"column":25,"nodeType":"41","messageId":"42","endLine":15,"endColumn":39},{"ruleId":"45","severity":1,"message":"46","line":19,"column":5,"nodeType":"41","endLine":19,"endColumn":14,"suggestions":"47"},{"ruleId":"45","severity":1,"message":"48","line":19,"column":15,"nodeType":"49","endLine":24,"endColumn":6},{"ruleId":"50","severity":1,"message":"51","line":61,"column":83,"nodeType":"52","endLine":61,"endColumn":165},{"ruleId":"39","severity":1,"message":"53","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":21},{"ruleId":"45","severity":1,"message":"48","line":12,"column":15,"nodeType":"49","endLine":21,"endColumn":6},{"ruleId":"54","severity":1,"message":"55","line":26,"column":13,"nodeType":"41","messageId":"56","endLine":26,"endColumn":20},{"ruleId":"39","severity":1,"message":"57","line":1,"column":26,"nodeType":"41","messageId":"42","endLine":1,"endColumn":35},{"ruleId":"39","severity":1,"message":"58","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"39","severity":1,"message":"59","line":8,"column":12,"nodeType":"41","messageId":"42","endLine":8,"endColumn":23},{"ruleId":"39","severity":1,"message":"60","line":8,"column":25,"nodeType":"41","messageId":"42","endLine":8,"endColumn":34},"no-unused-vars","'fetchPokemon' is defined but never used.","Identifier","unusedVar","'pokeDetails' is assigned a value but never used.","'setpokeDetails' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setloading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [pokemonStore.pokeDetails.id] as a second argument to the useEffect Hook.",["61"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useObserver' is defined but never used.","no-redeclare","'pokemon' is already defined.","redeclared","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'esta_logado' is assigned a value but never used.","'setLogado' is assigned a value but never used.",{"desc":"62","fix":"63"},"Add dependencies array: [pokemonStore.pokeDetails.id]",{"range":"64","text":"65"},[708,708],", [pokemonStore.pokeDetails.id]"]